The RPG program `BI890.rpg36.txt` is a legacy RPG III program (for IBM System/36 or AS/400) designed for Ship-to Master File Maintenance, providing an interactive interface for managing ship-to records. It is called from the OCL program `BI890.ocl36.txt` via the `BI890P` (RPGLE) program, as noted in the revision history (DC drown). Below, I’ll explain the process steps, business rules, tables (files) used, and external programs called, integrating its role within the context of the OCL, `BI890P`, and `BI8903` programs.

---

### **Process Steps of the RPG Program**

The `BI890.rpg36.txt` program is an interactive application that manages ship-to records through a series of display formats (`BI890S01`, `BI890S02`, `BI890S04`, `BI890S05`) on a workstation file (`SCREEN`). It supports inquiry, creation, update, deletion, and copying of ship-to records, with additional functionality for product and accessorial data. Due to the truncation of the source code (18,973 characters omitted), some logic is inferred based on the provided declarations, field definitions, and partial code. Here’s a step-by-step breakdown of the process:

1. **Initialization**:
   - **File Declarations**: Defines input files (`SHIPTO`, `ARCUST`, `ARCUPR`, `GSPROD`, `GSTABL`, `BICONT`) and the workstation file (`SCREEN`) with subroutines for handling roll keys (`ROLLSR`) and file status (`INFDS`).
   - **Arrays and Data Structures**:
     - `COM`: 14-element array for messages (40 characters each).
     - `S4HD`: 2-element array for headers on `BI890S04` (31 characters).
     - `NOT`: 2-element array for notes (20 characters).
     - `CSPR`, `SCPR`: 24-element arrays for ship-to product codes (4 characters).
     - `PRCD`: 16-element array for product codes (4 characters).
     - `PRDS`: 16-element array for product descriptions (30 characters).
     - `CNTY`, `GLCD`, `PFRC`, `PSFR`, `PCAF`: 16-element arrays for container type, gallons to bill, freight code, separate freight, and calculate freight flags (1 character each).
     - `STNO`: 16-element array for customer stock numbers (20 characters).
   - **Input Fields**: Reads company (`CO`), customer (`CUST`), and ship-to (`SHIP`) from the display file and maps them to file keys (`CSKEY`, `ARKEY`, `CPKEY`).

2. **Display File Processing**:
   - **Formats**:
     - `BI890S01`: Initial prompt for company, customer, and ship-to number.
     - `BI890S02`: Displays detailed ship-to information (name, addresses, city, state, ZIP, product codes, etc.).
     - `BI890S04`: Shows product-related data (product codes, descriptions, freight, and billing options).
     - `BI890S05`: Displays accessorial/marks information (order marks, invoice marks, dispatch info, bill of lading marks, freight bill details).
   - **Indicators**: Uses indicators for screen control:
     - `55`: Roll keys (paging).
     - `90`: Error messages for `BI890S04` and `BI890S05`.
     - `84`: Indicates valid product data in `BI890S04`.

3. **Subroutine: `FILARA`**:
   - Populates arrays for `BI890S04` (product data screen).
   - **Logic**:
     - If `SCPRYN` is not 'Y', processes all products:
       - Reads `GSPROD` records, checking company (`TPCONO=CO`) and sell flag (`TPSELL='Y'`).
       - Populates `PRCD` (product code), `PRDS` (description), and related fields (`GLCD`, `STNO`, `PFRC`, `PSFR`, `PCAF`) from `ARCUPR` using key `CUPRKY` (company, customer, ship-to, product).
     - If `SCPRYN` is 'Y', processes only selected products from `SCPR` array:
       - Maps `SCPR` entries to `PRCD`, retrieves descriptions from `GSPROD`, and fetches additional data from `ARCUPR`.
     - Sets indicator `84` if products are found (`X > 0`).

4. **Subroutine: `GETSUP`**:
   - Transfers accessorial and marks data from `SHIPTO` to display fields for `BI890S05`:
     - `CSOMK1`–`CSOMK4` (order marks), `CSIMK1`–`CSIMK2` (invoice marks), `CSDSP1`–`CSDSP4` (dispatch info), `CSBMK1`–`CSBMK4` (bill of lading marks), `CSFRNM`, `CSFRA1`–`CSFRA3` (freight bill details), `CSNOTE` (note status).

5. **Output Processing**:
   - Writes to display file (`SCREEN`) for formats `BI890S01`, `BI890S02`, `BI890S04`, `BI890S05`, including fields like company, customer, ship-to, addresses, product codes, and accessorial data.
   - Clears fields (e.g., `NAME`, `ADD1`–`ADD4`, `ZIP`, `MILS`, `STAT`, `ALTO`, etc.) before creating new records.

6. **Program Termination**:
   - The program likely ends with an end-of-job (`KG`) indicator, closing files and returning control to the caller (`BI890P` via OCL).

---

### **Business Rules**

The program enforces the following business rules, based on the code and context:
1. **Validation**:
   - **Ship-to Number**: Must be valid and not '999' (error message 13: "SHIPTO # 999 MAY NOT BE USED").
   - **Customer Number**: Must exist in `ARCUST` (error message 9: "INVALID CUSTOMER NUMBER").
   - **Ship-to Existence**: If not found, displays "SHIP TO NOT FOUND" (message 2). If previously deleted, shows "THIS SHIP TO WAS PREVIOUSLY DELETED" (message 5) and allows reactivation (message 10: "PREVIOUS SHIP TO WAS REACTIVATED").
   - **Company**: Validated against `BICONT` for invoicing style (`BCINST`).

2. **Product Handling**:
   - Only products with `TPSELL='Y'` in `GSPROD` are included unless specific products are selected (`SCPRYN='Y'`).
   - Product-related data (billing gallons, freight codes, etc.) is retrieved from `ARCUPR` and displayed in `BI890S04`.

3. **Deletion**:
   - Records marked with `CSDEL='D'` in `SHIPTO`, `ARDEL='D'` in `ARCUST`, or `CPDEL='D'` in `ARCUPR` are considered deleted but can be reactivated.

4. **Accessorial/Marks**:
   - Accessorial data (marks, dispatch, freight bill info) is stored in `SHIPTO` and displayed in `BI890S05`.

5. **File Navigation**:
   - Prevents navigation beyond file boundaries ("END OF FILE REACHED" or "BEGINNING OF FILE REACHED", messages 12 and 14).

6. **Field Formatting** (DC01):
   - Ship-to addresses are restructured to include city (`CSCTST`, 30 characters), state (`CSSTAT`, 2 characters), and ZIP (`CSCSZP`, 15 characters), replacing older formats in `BBSHSP` (now obsolete).

---

### **Tables (Files) Used**

The program uses the following files, as declared in the RPG code and aligned with the OCL (`BI890.ocl36.txt`):
1. **SCREEN** (Workstation File, `CP`):
   - Interactive display file with formats `BI890S01`, `BI890S02`, `BI890S04`, `BI890S05` for user interaction.
2. **SHIPTO** (Input, ` depicted`):
   - Ship-to master file (2048 bytes, key length 11), stores ship-to details (name, addresses, product codes, marks, etc.).
3. **ARCUST** (Input, `IF`):
   - Customer master file (384 bytes, key length 8), used to validate customer numbers.
4. **ARCUPR** (Input, `IF`):
   - Customer pricing/profile file (80 bytes, key length 16), stores product-specific data (e.g., gallons to bill, freight codes).
5. **GSPROD** (Input, `IF`):
   - Product master file (512 bytes, key length 6), provides product codes and descriptions (replaced `GSTABL` per JB04).
6. **GSTABL** (Input, `IF`):
   - General system table (256 bytes, key length 12), used for reference data (e.g., product descriptions).
7. **BICONT** (Input, `IF`):
   - Control file (256 bytes, key length 2), stores company-specific data (e.g., invoicing style).

The OCL declares additional files (`TRRTCD`, `CUADR`, `CUADRRD`, `BBORA1`, `BBORDH`, `BBSHSA1`, `SHIPTHS`, `ARCUPHS`), but only the above are explicitly used in `BI890`.

---

### **External Programs Called**

The program calls or references the following external programs, based on the revision history and context:
1. **BB800E** (DC02):
   - Called to display Ship-to Master Accessorials/Marks Inquiry, replacing `BI8901`.
   - Likely invoked when accessing `BI890S05` format.
2. **BI907AC** (JB05):
   - Called to view `ARCUPR` records, replacing the `BI890S04` format for product data inquiry.
3. **BI9002** (Implied from OCL):
   - Referenced in the OCL for `CUADR` and `CUADRRD` files, likely called for customer address maintenance (per JB01).
   - Not explicitly called in the provided code but part of the system workflow.

The program also uses system-level subroutines (`ROLLSR` for roll key handling), but no explicit system programs like `QCMDEXC` are mentioned in the provided code snippet.

---

### **Summary**

The `BI890.rpg36.txt` program is an interactive RPG III application for Ship-to Master File Maintenance, called via the OCL (`BI890.ocl36.txt`) and `BI890P`. It:
- Manages ship-to records through display formats for inquiry, creation, update, deletion, and product/accessorial data.
- Validates company, customer, and ship-to numbers, ensuring data integrity.
- Populates product arrays (`PRCD`, `PRDS`) from `GSPROD` and `ARCUPR`, and accessorial data from `SHIPTO`.
- Integrates with `BI890P` (caller) and `BI8903` (for copying records) in the broader system.

**Tables Used**:
- `SCREEN` (workstation file)
- `SHIPTO` (`?9?SHIPTO`)
- `ARCUST` (`?9?ARCUST`)
- `ARCUPR` (`?9?ARCUPR`)
- `GSPROD` (`?9?GSPROD`)
- `GSTABL` (`?9?GSTABL`)
- `BICONT` (`?9?BICONT`)

**External Programs Called**:
- `BB800E` (accessorial/marks inquiry)
- `BI907AC` (ARCUPR record inquiry)
- `BI9002` (implied, customer address maintenance)

Due to the truncation, some logic (e.g., main processing loop, additional subroutines) is not fully visible. If you have the complete code or need analysis of specific aspects, let me know!